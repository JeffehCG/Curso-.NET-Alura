@model IList<CaelumEstoque.Models.Produto>

<table class="table table-hover">
    <thead>
        <tr>
            <th>ID</th>
            <th>Nome</th>
            <th>Quantidade</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @*@foreach(CaelumEstoque.Models.Produto produto in ViewBag.Produtos)*@
        @* Model recebe a propriedade passada pelo return View() no Controller, Acima é definido o tipo da mesma *@
        @foreach (var produto in Model)
        {
            <tr>
                <td>@produto.Id</td>

                @* Link de navegação, ActionLink, primeiro parametro é o texto do link, segundo é ActionResult do controller que sera chamada, terceira os parametros passados para ActionResult*@
                <td>@Html.ActionLink(produto.Nome, "Visualiza", new { Id = produto.Id })</td>
                @* OU *@
                @* Link de navegação, RouteLink ,primeiro parametro é o texto do link, segundo é o nome da rota, terceira os parametros passados para ActionResult*@
                @*@Html.RouteLink(produto.Nome, "VisualizaProduto", new { Id = produto.Id })*@
                <td id="quantidade@(produto.Id)">@produto.Quantidade</td>
                <td>
                    <button onclick="decrementar(@produto.Id)">Decrementar</button>
                </td>
            </tr>
        }
    </tbody>
</table>

<h3>@Html.ActionLink("Adicionar Produto", "Form")</h3>

@* Abaixo utilizando AJAX, para fazer requisições assincronas, e carregar apenas uma parte da pagina *@
<script type="text/javascript" src="~/Scripts/jquery-1.10.2.js"></script>
<script type="text/javascript">

    // Metodo para decrementar
    function decrementar(produtoId) {
        var url = "@Url.Action("DecrementaQuantidade", "Produto")"
        // Recebe a url da requisição, os atributos da requisição, e uma callback que sera executado quando a requisição receber uma resposta do servidor
        $.post(url, { Id: produtoId }, atualizar);
    }

    // Metodo para atualizar a quantidade dos procedimentos, quando o servidor devolver a resposta para o AJAX
    function atualizar(resposta) {
        // Pegando elemento html pelo Id
        $("#quantidade" + resposta.Id).html(resposta.Quantidade);
    }
</script>